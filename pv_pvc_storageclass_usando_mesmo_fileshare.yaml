#criar o pv
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    kubernetes.io/azure-file-resource-group: mc_rg-app-production-aks02_kube-app-production-aks02_brazilsouth
    kubernetes.io/createdby: azure-file-dynamic-provisioner
    pv.kubernetes.io/bound-by-controller: "yes"
    pv.kubernetes.io/provisioned-by: kubernetes.io/azure-file
  name: pvc-3c86f0e2-ccba-4d7e-94e4-40e3cce416d8
  namespace: enajusp-prd
spec:
  accessModes:
  - ReadWriteMany
  azureFile:
    secretName: azure-storage-account-f7effaa5b63e1437383c31b-secret
    secretNamespace: enajusp-prd
    shareName: kubernetes-dynamic-pvc-3c86f0e2-ccba-4d7e-94e4-40e3cce416d8
  capacity:
    storage: 300Gi
  mountOptions:
  - dir_mode=0777
  - file_mode=0777
  - uid=0
  - gid=0
  - mfsymlinks
  - cache=strict
  - actimeo=30
  persistentVolumeReclaimPolicy: Delete
  storageClassName: shared-files
  
---
#criar o pvc exemplo pvc-3c86f0e2-ccba-4d7e-94e4-40e3cce416d8
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sga-pvc-teste
  namespace: enajusp-prd
  annotations:
    pv.kubernetes.io/bind-completed: 'yes'
    pv.kubernetes.io/bound-by-controller: 'yes'
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/azure-file
    volume.kubernetes.io/storage-resizer: kubernetes.io/azure-file
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 300Gi
  storageClassName: shared-files
  volumeName: pvc-3c86f0e2-ccba-4d7e-94e4-40e3cce416d8
  
---
#criar um pod pra testar 
apiVersion: v1
kind: Pod
metadata:
  name: nginx-teste
  namespace: enajusp-prd
spec:
  volumes:
    - name: disk01
      persistentVolumeClaim:
        claimName: sga-pvc-teste
  containers:
    - name: nginx-teste
      image: nginx
      volumeMounts:
      - name: disk01
        mountPath: /mnt/azure
